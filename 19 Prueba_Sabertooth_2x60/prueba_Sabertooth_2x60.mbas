program prueba_Sabertooth_2x60

dim adc_rd as word
dim datos_set, dato_recep,viajero,vel as byte
dim comando as byte [10]


  sub procedure interrupt
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' RECIVE POR PUERTO SERIAL
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
     if (PIR1.RCIF=1) then
          PIR1.RCIF=0
'          Recepcion SERIAL
'          I&T10000=ADELANTE
'          I&T01000=ATRAS
'          I&T00100=DERECHA
'          I&T00010=IZQUIERDA
'          I&T00001=PARAR
          dato_recep = UART1_Read()
          select case viajero
          'IDENTIFICADORES
               case 0
                     if dato_recep = "I" then ' I
                          viajero = 1
                     else
                          viajero = 0
                     end if
               case 1
                     if dato_recep = "&" then
                          viajero = 2
                     else
                          viajero=0
                     end if
               case 2
                     if dato_recep = "T" then
                          viajero = 3
                     else
                          viajero=0
                     end if
          'SE GUARDAN EN UN ARREGLO LOS COMANDOS
               case 3
                     comando[1] = dato_recep    'ADELANTE
                     viajero=4
               case 4
                     comando[2] = dato_recep    'ATRAS
                     viajero=5
               case 5
                     comando[3] = dato_recep    'IZQUIERDA
                     viajero=6
               case 6
                     comando[4] = dato_recep    'DERECHA
                     viajero=7
               case 7
                     comando[5] = dato_recep    'ATRAS
                     viajero = 8
               case 8
                    viajero=0

          end select
     end if
     INTCON=0XE0
     PIE1.RCIE=1
     PIR1.RCIF=0
     end sub
sub procedure adelante_m1()
    PORTB.RB0=1
    Delay_us(1000)
    PORTB.RB0=0
    Delay_us(4000)
end sub
sub procedure adelante_m2()
    PORTB.RB1=1
    Delay_us(1000)
    PORTB.RB1=0
    Delay_us(4000)
end sub
sub procedure parar()
    PORTB.RB0=1
    PORTB.RB1=1
    Delay_us(1500)
    PORTB.RB0=0
    PORTB.RB1=0
    Delay_us(3500)
end sub

sub procedure parar_m1()
    PORTB.RB0=1
    Delay_us(1500)
    PORTB.RB0=0
    Delay_us(3500)
end sub
sub procedure parar_m2()
    PORTB.RB1=1
    Delay_us(1500)
    PORTB.RB1=0
    Delay_us(3500)
end sub
sub procedure atras_m1()
    PORTB.RB0=1
    Delay_us(2000)
    PORTB.RB0=0
    Delay_us(3000)
end sub

sub procedure atras_m2()
    PORTB.RB1=1
    Delay_us(2000)
    PORTB.RB1=0
    Delay_us(3000)
end sub
sub procedure izquierda()
    adelante_m1()
    atras_m2()
end sub
sub procedure derecha()
    adelante_m2()
    atras_m1()
end sub
main:

OSCCON = 0X65 ' Oscilador interno de 8mhz
OPTION_REG = 0x86
INTCON = 0XE0      ' Activado interrupciones globales
                   ' Registro control de interrupciones
                   ' Activado interrupciones perifericas
PIR1.RCIF=0
PIE1.RCIE=1
TRISA =0X00
TRISB= 0X00
PORTB= 0X00

TRISC = 0x80
PORTC = 0x00
ANSEL = 0X00
ANSELH = 0X00

UART1_Init(9600)
datos_set=0x00
viajero=0

  while(1)
       if comando[1]=0x31 then    'ADELANTE
          adelante_m1()
          adelante_m2()
       else
          if comando[2]=0x31 then     'ATRAS
             atras_m1()
             atras_m2()
          else
             if comando[3]=0x31 then     'IZQUIERDA
                izquierda()
             else
                if comando[4]=0x31 then     'DERECHA
                   derecha()
                else
                   if comando[5]=0x31 then     'PARAR
                      parar()
                   else
                      parar()
                   end if
                end if
             end if
          end if
       end if
  wend
end.
