program Anemometro_temperatura_luz
dim revol, luz as word
dim valor as float
dim veloc as byte
dim txt as string[5]
dim Raw_temp, TempC, comma as word
dim i, j1, j2, minus       as byte
dim text                   as string[14]
sub procedure interrupt
     if TestBit(INTCON,INTF) then ' hubo la interrupcion por portb.0
          ClearBit(INTCON,INTF)
          inc(revol) ' incrementamos las revoluciones
     end if

end sub
sub procedure tiempo
dim contador as word
contador=0
while (contador <=600)
  inc(contador)
  Delay_1sec()
wend

end sub
main:
     OSCCON = 0X75 ' Oscilador interno de 8mhz
     OPTION_REG = 0X83 ' Pull up PORTB desactivado
                       ' TMR0 prescaler 16
     INTCON = 0XD0 ' Activado interrupciones globales
                   ' Activado interrupciones perifericas
                   ' Activado interrupciones externas
                   ' Activado interrupcion timer 0
     TRISA = 0X01
     PORTA = 0x00
     TRISB = 0X03
     PORTB = 0X00
     TRISC = 0X80
     PORTC = 0X00
     ANSEL = 0X01
     ANSELH = 0X00
     UART1_Init(9600)
     veloc = 0x00
     while 1
           'ANEMOMETRO
          revol = 0 ' revoluciones son iguales a 0
          Delay_ms(1000) ' con este tiempo sabemos cuantas revoluciones van haber en 1seg
          valor = (revol*15*PI)/180 ' asignamos las revoluciones al dato valor
          FloatToStr(valor,txt)
          UART1_Write_Text("VELOCIDAD [cm/s] = ")
          UART1_Write_Text(txt)
          UART1_Write(0X0D)
          UART1_Write(0X0A)
          'SENSOR DE LUZ
          luz =100 - (Adc_Read(0)*100)/1024
          WordToStr(luz,txt)
          UART1_Write_Text("LUZ = ")
          UART1_Write_Text(txt)
          UART1_Write_Text(" % ")
          UART1_Write(0X0D)
          UART1_Write(0X0A)
          'SENSOR DE TEMPERATURA

          if ow_reset(PORTB, 1) = 0 then ' senal de reset onewire
          ow_write(PORTB, 1, 0xCC) ' pase rom
          ow_write(PORTB, 1, 0x44) ' convertir a t
          delay_us(120)

          ow_reset(PORTB, 1)  ' 0 = presente, 1= no presente

          UART1_Write_Text(" Temperatura:   ")
          UART1_Write(0X0D)
          ow_write(PORTB, 1, 0xCC) ' pase rom
          ow_write(PORTB, 1, 0xBE) ' leer a SCRATCHPAD

          j1 = ow_Read(PORTB, 1) ' leer parte baja
          j2 = ow_Read(PORTB, 1) ' leer parte alta

          minus = j2
          minus = minus >> 3

          if minus = 0x1F then ' chequeamos la temperatura (+ o -)
               j2 = not j2
               j1 = not j1
               j1 = j1 + 1
          end if

          Raw_temp = (j2 << 8) or j1 ' obteniendo la data raw

          if minus = $1F then
                ' escribimos "-"
               UART1_Write("-")
          else
                ' escribimos "+"
               UART1_Write("+")
          end if

          TempC = (Raw_temp and $0FF0) >> 4
          comma = (j1 and $0F) * 625

          WordToStrWithZeros(TempC, text)
          'UART1_Write(text[2])
          UART1_Write(text[3])
          UART1_Write(text[4])
          UART1_Write(".")

          WordToStrWithZeros(comma, text)
          UART1_Write(text[1])
          UART1_Write(text[2])
          'UART1_Write(text[3])
          'UART1_Write(text[4])
          UART1_Write(" ")
          UART1_Write("C")
          UART1_Write(0X0D)

          else
          UART1_Write_Text(" no signal  ")
          UART1_Write(0X0D)
          end if

     wend
end.
