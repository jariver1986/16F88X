program t_lcd_serial

dim LCD_RS as sbit at RB1_bit
LCD_EN as sbit at RA3_bit
LCD_D4 as sbit at RC2_bit
LCD_D5 as sbit at RA4_bit
LCD_D6 as sbit at RC1_bit
LCD_D7 as sbit at RA2_bit
LCD_RS_Direction as sbit at TRISB1_bit
LCD_EN_Direction as sbit at TRISA3_bit
LCD_D4_Direction as sbit at TRISC2_bit
LCD_D5_Direction as sbit at TRISA4_bit
LCD_D6_Direction as sbit at TRISC1_bit
LCD_D7_Direction as sbit at TRISA2_bit

' declaracion de variables
dim Raw_temp, TempC, comma,valor1,valor2,kelvin,farenheit,centinela as word
dim i, j1, j2, minus, datos_set, dato_recep, viajero as byte
dim text,text2,text3 as string[14]
dim temp1,temp2,temp3,temperatura,temporal1,temporal2,temporal3 as byte
dim temperatura1,temperatura2,temperatura3,turno as byte


sub procedure interrupt
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' RECIVE POR PUERTO SERIAL
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
     if (PIR1.RCIF=1) then
          PIR1.RCIF=0

          dato_recep = UART1_Read()
          select case viajero
           case 0
                     if dato_recep = 0X54 then ' I
                          viajero = 1
                     else
                          viajero = 0
                     end if
               case 1
                     if dato_recep = 0X3D then ' ide temp
                          viajero = 2
                     else
                          viajero = 0
                     end if
               case 2 ' display 1
                     temp1 = dato_recep
                     viajero = 3
               case 3 ' display 2
                     temp2 = dato_recep
                     viajero = 4
               case 4
                     temp3 = dato_recep
                     viajero = 5
               case 5
                     if dato_recep = 0X46 then    'FARENHEIT
                          viajero= 0
                          datos_set= 0xFF
                          turno=1
                     else
                         if dato_recep = 0X43 then  'CELCIUS
                            viajero= 0
                            datos_set= 0xFF
                            turno=2
                         else
                           if dato_recep = 0X43 then  'KELVIN
                              viajero= 0
                              datos_set= 0xFF
                              turno=3
                           else
                              viajero=0
                           end if

                         end if

                     end if
          end select
     end if
     INTCON=0XE0
     PIE1.RCIE=1
     PIR1.RCIF=0
     end sub
sub procedure numeritos()
temporal1=0x0F
temporal2=temporal1 and temp1
temperatura1=temporal2
temporal2=temporal1 and temp2
temperatura2=temporal2
temporal2=temporal1 and temp3
temperatura3=temporal2
temperatura=(temperatura1*100)+(temperatura2*10)+temperatura3 'variables luminosidad y temperatura son convertidas a decimal por igual
end sub
sub procedure IMPRIME()

          WordToStrWithZeros(TempC, text)
      'LCD
      Lcd_Chr(2, 4, text[2])
      Lcd_Chr(2, 5, text[3])
      Lcd_Chr(2, 6, text[4])
      Lcd_Chr(2, 7, ".")
      'SERIAL
      UART1_Write(text[2])
      UART1_Write(text[3])
      UART1_Write(text[4])
      UART1_Write(".")


      WordToStrWithZeros(comma, text)
      'LCD
      Lcd_Chr(2, 8, text[1])
      Lcd_Chr(2, 9, text[2])
      'SERIAL
      UART1_Write(text[1])
      UART1_Write(text[2])
      UART1_Write(0X0D)
      UART1_Write(0X0A)

      Delay_ms(500)
      Lcd_Cmd(_LCD_CLEAR)


end sub

main:
OPTION_REG = 0X06
' Registro Oscilador de control
OSCCON = 0X75 ' Oscilador interno de 8mhz
' Registro PUERTO A
INTCON = 0XE0 ' Activado interrupciones globales
                   ' Registro control de interrupciones
                   ' Activado interrupciones perifericas
PIR1.RCIF=0
PIE1.RCIE=1

TRISA = 0X00 ' porta.5 como entrada digital
PORTA = 0X00
' Registro PUERTO A
TRISC = 0X00 ' porta.5 como entrada digital
PORTC = 0X00
' Registro PUERTO B
TRISB = 0X00 ' porta.5 como entrada digital
PORTB = 0X00

'TRISD = 0X00 ' porta.5 como entrada digital
'PORTD = 0X00

TRISE = 0X08 ' porta.5 como entrada digital
PORTE = 0X00


UART1_Init(9600)
' Seleccion de registro analogico. 1 analogico, 0 digitales
ANSEL = 0X00 ' AN<7:0>
ANSELH = 0X00 ' AN<13:8>
text = "000.0000" ' formato del texto a mostrar
delay_ms(250)
Lcd_Init() ' inicializamos la lcd
Lcd_Cmd(_LCD_CLEAR)
Lcd_Cmd(_LCD_CURSOR_OFF)
Lcd_Out(1, 1, " Espol        ") ' lo que se va a mostrar en la linea 1
Lcd_Out(2, 1, " DS18B20      ") ' lo que se va a mostrar en la linea 2
delay_ms(1000)
Lcd_Cmd(_LCD_CLEAR)
Lcd_Cmd(_LCD_CURSOR_OFF)
Lcd_Out(1, 1, " Sensor de    ") ' lo que se va a mostrar en la linea 1
Lcd_Out(2, 1, " Temperatura: ") ' lo que se va a mostrar en la linea 1
delay_ms(1000)
Lcd_Cmd(_LCD_CLEAR)

datos_set  =0
dato_recep =0
viajero    =0
TURNO=2
'--- main loop
while (TRUE)



if(centinela>temperatura)then
   Lcd_Out(1, 1, "Ventilador      ")
   Lcd_Out(2, 1, "Encendido       ")
   UART1_Write_Text("Ventilador encendido")
   UART1_Write(0x0D)
   UART1_Write(0x0A)
   PORTC.RC1=1
   Delay_ms(1000)
   Lcd_Cmd(_LCD_CLEAR)

else
   Lcd_Out(1, 1, "Ventilador      ")
   Lcd_Out(2, 1, "Apagado         ")
   UART1_Write_Text("Ventilador apagado")
   UART1_Write(0x0D)
   UART1_Write(0x0A)
   PORTC.RC1=0
   Delay_ms(1000)
   Lcd_Cmd(_LCD_CLEAR)

end if

if(datos_set=0xFF)then
        numeritos()

        UART1_Write(0x54) ' I
        UART1_Write(0x3D) ' IDE  T
        UART1_Write(temp1) ' centenas
        UART1_Write(temp2) ' decenas
        UART1_Write(temp3) 'unidades
        UART1_Write(0x46) ' FIN DE CADENA
        UART1_Write(0x0D)
        UART1_Write(0x0A)
        Delay_ms(50)
        datos_set=0x00
end if

if ow_reset(PORTC, 0) = 0 then ' senal de reset onewire

ow_write(PORTC, 0, 0xCC) ' pase rom
ow_write(PORTC, 0, 0x44) ' convertir a t
delay_us(100)
ow_reset(PORTC, 0) ' 0 = presente, 1= no presente
ow_write(PORTC, 0, 0xCC) ' pase rom
ow_write(PORTC, 0, 0xBE) ' leer a SCRATCHPAD
j1 = ow_Read(PORTC, 0) ' leer parte baja
j2 = ow_Read(PORTC, 0) ' leer parte alta
minus = j2
minus = minus >> 3
if minus = 0x1F then ' chequeamos la temperatura (+ o -)
j2 = not j2
j1 = not j1
j1 = j1 + 1
end if
Raw_temp = (j2 << 8) or j1 ' obteniendo la data raw
if minus = $1F then
Lcd_Chr(2, 3, "-") ' escribimos "-"
else
Lcd_Chr(2, 3, "+") ' escribimos "+"
end if


  if turno=2 then

      TempC = (Raw_temp and $0FF0) >> 4
      centinela=TempC
      comma = (j1 and $0F) * 625

      Lcd_Out(1, 1, " CELCIUS        ") ' lo que se va a mostrar en la linea 1
      UART1_Write_Text("CELCIUS=")

      IMPRIME()

  end if

  if turno=3 then

      TempC = ((Raw_temp and $0FF0) >> 4)+273
      comma = (j1 and $0F) * 625

      Lcd_Out(1, 1, " KELVIN         ") ' lo que se va a mostrar en la linea 1
      UART1_Write_Text("KELVIN=")
      IMPRIME()


  end if

  if turno=1 then
     TempC = ((Raw_temp and $0FF0) >> 4)*9/5 +32
      comma = (j1 and $0F) * 625

     Lcd_Out(1, 1, " FARENHEIT      ") ' lo que se va a mostrar en la linea 1
     UART1_Write_Text("FARENHEIT=")
     IMPRIME()

  end if

else
Lcd_Cmd(_LCD_CLEAR)
Lcd_Cmd(_LCD_CURSOR_OFF)
Lcd_Out(1, 1, " NO SIGNAL ")
Delay_ms(120)
end if

IF PORTE.RE3=0 THEN
   INC(TURNO)
   WHILE PORTE.RE3=0
     Lcd_Cmd(_LCD_CLEAR)
   WEND
   IF TURNO=4 THEN
      TURNO=1
   END IF
END IF
'
wend
end.
