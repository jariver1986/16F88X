program lcd_uart

dim LCD_RS as sbit at RB1_bit
LCD_EN as sbit at RA3_bit
LCD_D4 as sbit at RC2_bit
LCD_D5 as sbit at RA4_bit
LCD_D6 as sbit at RC1_bit
LCD_D7 as sbit at RA2_bit
LCD_RS_Direction as sbit at TRISB1_bit
LCD_EN_Direction as sbit at TRISA3_bit
LCD_D4_Direction as sbit at TRISC2_bit
LCD_D5_Direction as sbit at TRISA4_bit
LCD_D6_Direction as sbit at TRISC1_bit
LCD_D7_Direction as sbit at TRISA2_bit
' **********VARIABLES Y CADENAS DE CARACTERES A UTILIZAR**********
dim txt2 as char[33]
main:
' Registro Oscilador de control
OSCCON = 0X75 ' Oscilador interno de 8mhz
' Registro PUERTO A
TRISA = 0X00 ' PORTA.0 Entrada
PORTA = 0X00
' Registro PUERTO B
TRISB = 0X0F ' PORTB salidas
PORTB = 0X00
' Registro PUERTO C
TRISC = 0X80 ' PORTC salidas
PORTC = 0X00
' Registro PUERTO E
TRISE = 0X00 ' PORTE como salidas digital
PORTE = 0X00
' Seleccion de registro analogico. 1 analogico, 0 digitales
ANSEL = 0X00 ' AN<7:0>
ANSELH = 0X00 ' AN<13:8>
Lcd_Init() ' Inicializacion Lcd
Lcd_Cmd(_LCD_CLEAR) ' encera display
Lcd_Cmd(_LCD_CURSOR_OFF) ' Cursor off
Lcd_Out(1,2,"INSTITUTO ") ' escribe la cadena en la primera fila
Lcd_Out(2,2,"SUDAMERICANO") ' escribe la cadena en la segunda fila
delay_ms(3000)
Lcd_Cmd(_LCD_CLEAR) ' encera display
Lcd_Cmd(_LCD_CURSOR_OFF) ' Cursor off
delay_ms(250)
UART1_Init(9600)
Lcd_Out(1,2,"SISTEMA DE  ") ' escribe la cadena en la primera fila
Lcd_Out(2,2,"MENSAJERIA") ' escribe la cadena en la segunda fila
delay_ms(3000)
while(1)
if (UART1_Data_Ready() <> 0) then ' If data is received,
UART1_Read_Text(txt2,".",32) ' lee la cadena hasta que encuentre PUNTO
UART1_Write_Text(txt2) ' envia un eco de la cadena
Lcd_Cmd(_LCD_CLEAR) ' encera display
Lcd_Cmd(_LCD_CURSOR_OFF) ' Cursor off
Lcd_Out(1,1,txt2) 'me muestra la cadena que escribiste via serial en el lcd
end if
wend
end.
