' *
' * Project name:
'     HIDtest (Testing the USB HID connection)
' * Copyright:
'     (c) MikroElektronika, 2009
' * Revision History:
'     20050502:
'       - initial release;
' * Description:
'     This example establishes connection with the HID terminal that is active
'     on the PC. Upon connection establishment, the HID Device Name will appear
'     in the respective window. After that software will wait for data and
'     it will return received data back.
' * Test configuration:
'     MCU:             PIC18F4550
'                      http://ww1.microchip.com/downloads/en/DeviceDoc/39632D.pdf
'     Dev.Board:       EasyPIC6
'                      http://www.mikroe.com/en/tools/EasyPIC6/
'     Oscillator:      HS 8.000 MHz  (USB osc. is raised with PLL to 48.000MHz)
'     Ext. Modules:    on-board USB-HID
'                      http://www.mikroe.com/pdf/easypic6/easypic6_manual_v100.pdf#page14
'     SW:              mikroBasic PRO for PIC
'                      http://www.mikroe.com/en/compilers/mikrobasic/pro/pic/
' * NOTES:
'     (*) Be VERY careful about the configuration flags for the 18F4550 - there"s
'       so much place for mistake!
'     - Place jumpers J12 in the right position
' *
program USB_HID_test

include USBdsc

dim
 k, i, ch      as byte
 userWR_buffer as byte[64]
 userRD_buffer as byte[64]

'******************************************************************************
' Main Interrupt Routine
'******************************************************************************
sub procedure interrupt
  HID_InterruptProc
end sub
'******************************************************************************


'******************************************************************************
' Initialization Routine
'******************************************************************************
sub procedure Init_Main
  '--------------------------------------
  ' Disable interrupts
  '--------------------------------------
  INTCON = 0                             ' Disable GIE, PEIE, TMR0IE,INT0IE,RBIE
  INTCON2 = 0xF5
  INTCON3 = 0xC0
  RCON.IPEN = 0                          ' Disable Priority Levels on interrupts
  PIE1 = 0
  PIE2 = 0
  PIR1 = 0
  PIR2 = 0

  ADCON1 = ADCON1 or 0x0F                         ' Configure all ports with analog sub function as digital
  '--------------------------------------
  ' Ports Configuration
  '--------------------------------------
  TRISA = 0xFF
  TRISB = 0xFF
  TRISC = 0xFF
  TRISD = 0
  TRISE = 0x07

  LATA = 0
  LATB = 0
  LATC = 0
  LATD = 0
  LATE = 0
end sub

'******************************************************************************
' Main Program Routine
'******************************************************************************
main:
  Init_Main()

  HID_Enable(@userRD_buffer, @userWR_buffer)
  Delay_ms(1000)
  Delay_ms(1000)
  while true
    k = HID_Read()
    i = 0
    while i < k
      ch = userRD_buffer[0]
      userWR_buffer[0] = ch
      HID_Write(@userWR_buffer, 1)
      inc(i)
    wend
  wend
  HID_Disable()
end.
