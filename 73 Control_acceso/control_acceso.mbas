program control_acceso

dim LCD_RS as sbit at RB1_bit
    LCD_EN as sbit at RA3_bit
    LCD_D4 as sbit at RC2_bit
    LCD_D5 as sbit at RA4_bit
    LCD_D6 as sbit at RC1_bit
    LCD_D7 as sbit at RA2_bit

    LCD_RS_Direction as sbit at TRISB1_bit
    LCD_EN_Direction as sbit at TRISA3_bit
    LCD_D4_Direction as sbit at TRISC2_bit
    LCD_D5_Direction as sbit at TRISA4_bit
    LCD_D6_Direction as sbit at TRISC1_bit
    LCD_D7_Direction as sbit at TRISA2_bit

'AQUI DECLARO LAS VARIABLES A UTILIZAR EN LA PROGRAMACION
dim viajero,dato_recep,datos_set as byte
dim dato,dato1,dato2 as byte[12]
dim dato_rd as byte[12]
dim dato_listo as byte
dim i, veces, grabar as byte

  sub procedure interrupt
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' RECIVE POR PUERTO SERIAL
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
     if (PIR1.RCIF=1) then
          PIR1.RCIF=0
          dato_recep = UART1_Read()
          select case viajero
               case 0
                    if dato_recep = 0X02 then
                         viajero = 1
                    else
                         viajero = 0
                    end if
               case 1,2,3,4,5,6,7,8,9,10,11,12
                    dato_rd[12-viajero] = dato_recep
                    inc(viajero)
               case 13
                    if dato_recep = 0X0D then
                         viajero = 14
                    else
                         viajero = 0
                    end if
               case 14
                    if dato_recep = 0X0A then
                         viajero = 15
                    else
                         viajero = 0
                    end if
               case 15
                    if dato_recep = 0X03 then
                         dato_listo = 0xFF
                    end if
                    viajero = 0
          end select
     end if
     INTCON = INTCON or 0xC0
     end sub
main:
 OPTION_REG = 0x06
' Registro Oscilador de control
OSCCON = 0X75 ' Oscilador interno de 8mhz
OPTION_REG = 0x86
INTCON = 0XC0 ' Activado interrupciones globales
              ' Activado interrupciones perifericas
PIR1.RCIF=0
PIE1.RCIE=1
TRISA =0X00
TRISB= 0X00
PORTB= 0X00
TRISC = 0x80
PORTC = 0x00
PORTE = 0x00
TRISE = 0x08
ANSEL = 0X00
ANSELH = 0X00
UART1_Init(9600)
viajero=0
grabar = 0x00
dato_listo = 0x00
dato[11] = EEPROM_Read(11)
delay_ms(10)
dato[10] = EEPROM_Read(10)
delay_ms(10)
dato[9] = EEPROM_Read(9)
delay_ms(10)
dato[8] = EEPROM_Read(8)
delay_ms(10)
dato[7] = EEPROM_Read(7)
delay_ms(10)
dato[6] = EEPROM_Read(6)
delay_ms(10)
dato[5] = EEPROM_Read(5)
delay_ms(10)
dato[4] = EEPROM_Read(4)
delay_ms(10)
dato[3] = EEPROM_Read(3)
delay_ms(10)
dato[2] = EEPROM_Read(2)
delay_ms(10)
dato[1] = EEPROM_Read(1)
delay_ms(10)
dato[0] = EEPROM_Read(0)
delay_ms(10)

dato1[11]=0x30
dato1[10]=0x31
dato1[9]= 0x30
dato1[8]= 0x30
dato1[7]= 0x38
dato1[6]= 0x31
dato1[5]= 0x45
dato1[4]= 0x45
dato1[3]= 0x35
dato1[2]= 0x38
dato1[1]= 0x33
dato1[0]= 0x36

dato2[11]=0x30
dato2[10]=0x31
dato2[9]= 0x30
dato2[8]= 0x30
dato2[7]= 0x38
dato2[6]= 0x31
dato2[5]= 0x45
dato2[4]= 0x42
dato2[3]= 0x37
dato2[2]= 0x45
dato2[1]= 0x31
dato2[0]= 0x35
UART1_Init(9600)
 Lcd_Init()
  Lcd_Cmd(_LCD_CLEAR)
  Lcd_Cmd(_LCD_CURSOR_OFF)
  Lcd_Out(1,1,"INSTITUTO")
  Lcd_Out(2,1,"DUDAMERICANO")
  Delay_ms(2000)
  Lcd_Cmd(_LCD_CLEAR)
  Lcd_Out(1,1,"PRESENTE")
  Lcd_Out(2,1,"IDENTIFICACION")

  while(1)
       if dato_listo = 0xFF then
            dato_listo = 0x00
            if grabar then
                 grabar = 0x00
                 for i=0 to 11
                      dato[i] = dato_rd[i]
                      EEPROM_Write(i,dato_rd[i])
                      delay_ms(10)
                 next i
            else
                 veces = 0
                 for i=0 to 11
                      if dato_rd[i] = dato1[i] then
                           inc(veces)
                      end if
                 next i
                 if veces = 12 then
                      Lcd_Cmd(_LCD_CLEAR)
                      Lcd_Out(1,1,"ACCESO")
                      Lcd_Out(2,1,"PERMITIDO")
                      UART1_Write_Text(" Bien venido ")
                      Delay_ms(2000)
                      PORTB.RB0= 1
                      Delay_ms(2000)
                      PORTB.RB0= 0
                      GOTO Main
                 else
                       Lcd_Cmd(_LCD_CLEAR)
                      Lcd_Out(1,1,"ACCESO")
                      Lcd_Out(2,1,"NEGADO")
                       Delay_ms(2000)
                       GOTO Main
                 end if
                 veces = 0
                 for i=0 to 11
                      if dato_rd[i] = dato2[i] then
                           inc(veces)
                      end if
                 next i
                 if veces = 12 then
                      Lcd_Cmd(_LCD_CLEAR)
                      Lcd_Out(1,1,"ACCESO")
                      Lcd_Out(2,1,"PERMITIDO")
                      UART1_Write_Text(" Acceso permitido")
                      Delay_ms(2000)
                      PORTB.RB0= 1
                      Delay_ms(2000)
                      PORTB.RB0= 0
                      GOTO Main
                 else
                       Lcd_Cmd(_LCD_CLEAR)
                      Lcd_Out(1,1,"ACCESO")
                      Lcd_Out(2,1,"NEGADO")

                       Delay_ms(2000)
                       GOTO Main
                 end if
                 veces = 0
                 for i=0 to 11
                      if dato_rd[i] = dato[i] then
                           inc(veces)
                      end if
                 next i
                 if veces = 12 then
                      Lcd_Cmd(_LCD_CLEAR)
                      Lcd_Out(1,1,"ACCESO")
                      Lcd_Out(2,1,"PERMITIDO")
                      UART1_Write_Text(" Acceso permitido")
                      Delay_ms(2000)
                      PORTB.RB0= 1
                      Delay_ms(2000)
                      PORTB.RB0= 0
                      GOTO Main
                 else
                       Lcd_Cmd(_LCD_CLEAR)
                      Lcd_Out(1,1,"ACCESO")
                      Lcd_Out(2,1,"NEGADO")

                       Delay_ms(2000)
                       GOTO Main
                 end if
            end if
       end if
       if porte.3=0 then
            grabar = 0xFF
       end if
  wend
end.
