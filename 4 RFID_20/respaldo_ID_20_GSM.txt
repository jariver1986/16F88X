program ID_20

'AQUI DECLARO LAS VARIABLES A UTILIZAR EN LA PROGRAMACION
dim viajero,dato_recep,datos_set as byte

dim dato,dato1,dato2,dato3 as byte[12]
dim dato_rd as byte[12]
dim dato_listo as byte
dim i, veces1,veces2,veces3, grabar as byte

  sub procedure interrupt
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' RECIVE POR PUERTO SERIAL
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
     if (PIR1.RCIF=1) then
          PIR1.RCIF=0
          dato_recep = UART1_Read()
          select case viajero
               case 0
                    if dato_recep = 0X02 then
                         viajero = 1
                    else
                         viajero = 0
                    end if
               case 1,2,3,4,5,6,7,8,9,10,11,12
                    dato_rd[12-viajero] = dato_recep
                    inc(viajero)
               case 13
                    if dato_recep = 0X0D then
                         viajero = 14
                    else
                         viajero = 0
                    end if
               case 14
                    if dato_recep = 0X0A then
                         viajero = 15
                    else
                         viajero = 0
                    end if
               case 15
                    if dato_recep = 0X03 then
                         dato_listo = 0xFF
                    end if
                    viajero = 0
          end select
     end if
     INTCON = INTCON or 0xC0
     end sub
     
SUB PROCEDURE pila_mensaje()
     UART1_Write_Text("AT")
     UART1_Write(0X0D)
     UART1_Write(0X0A)
     Delay_1sec
     UART1_Write_Text("AT+CMGS")
     UART1_Write(0X3D)
     UART1_Write(0X22)
     UART1_Write_Text("0992409136")
     UART1_Write(0X22)
     UART1_Write(0X0D)
     UART1_Write(0X0A)
     Delay_1sec
end sub

sub procedure cola_mensaje
     UART1_Write(0X1A)
     Delay_1sec
     UART1_Write(0X41)
     UART1_Write(0X54)
     UART1_Write(0X0D)
     UART1_Write(0X0A)
     Delay_1sec
     Delay_1sec
     Delay_1sec
     Delay_1sec
END SUB

SUB PROCEDURE LLAMADA()
 UART1_Write(0X41)   'A
      UART1_Write(0X54)   'T
      UART1_Write(0X0D)    'enter
      UART1_Write(0X0A)
      Delay_1sec
      UART1_Write_Text("ATD0992409136")
      UART1_Write(0X3B)
      UART1_Write(0X0D)
      UART1_Write(0X0A)
      Delay_1sec
      Delay_1sec
      Delay_1sec
      Delay_1sec
      Delay_1sec
      Delay_1sec
      Delay_1sec
      Delay_1sec
      Delay_1sec
      Delay_1sec
      UART1_Write_Text("ATH")
      UART1_Write(0X0D)
      UART1_Write(0X0A)
      UART1_Write(0X0D)
      UART1_Write(0X0A)
      Delay_1sec
      Delay_1sec
      Delay_1sec
      Delay_1sec
      Delay_1sec
      Delay_1sec
      Delay_1sec
      Delay_1sec
      Delay_1sec
      Delay_1sec
END SUB
     
main:
 OPTION_REG = 0x06
' Registro Oscilador de control
OSCCON = 0X75 ' Oscilador interno de 8mhz
OPTION_REG = 0x86
INTCON = 0XC0 ' Activado interrupciones globales
              ' Activado interrupciones perifericas
PIR1.RCIF=0
PIE1.RCIE=1

TRISA =0X00
TRISB= 0X00

PORTB= 0X00
TRISC = 0x80
PORTC = 0x00

PORTE = 0x08

ANSEL = 0X00
ANSELH = 0X00

UART1_Init(9600)

viajero=0
grabar = 0x00
dato_listo = 0x00

UART1_Write(0X41)   'A
UART1_Write(0X54)   'T
UART1_Write(0X0D)    'enter
UART1_Write(0X0A)
Delay_ms(100)

dato[11] = EEPROM_Read(11)
delay_ms(10)
dato[10] = EEPROM_Read(10)
delay_ms(10)
dato[9] = EEPROM_Read(9)
delay_ms(10)
dato[8] = EEPROM_Read(8)
delay_ms(10)
dato[7] = EEPROM_Read(7)
delay_ms(10)
dato[6] = EEPROM_Read(6)
delay_ms(10)
dato[5] = EEPROM_Read(5)
delay_ms(10)
dato[4] = EEPROM_Read(4)
delay_ms(10)
dato[3] = EEPROM_Read(3)
delay_ms(10)
dato[2] = EEPROM_Read(2)
delay_ms(10)
dato[1] = EEPROM_Read(1)
delay_ms(10)
dato[0] = EEPROM_Read(0)
delay_ms(10)

dato1[11] = 0x32
delay_ms(10)
dato1[10] = 0x37
delay_ms(10)
dato1[9] = 0x30
delay_ms(10)
dato1[8] = 0x30
delay_ms(10)
dato1[7] = 0x38
delay_ms(10)
dato1[6] = 0x41
delay_ms(10)
dato1[5] = 0x45
delay_ms(10)
dato1[4] = 0x39
delay_ms(10)
dato1[3] = 0x44
delay_ms(10)
dato1[2] = 0x43
delay_ms(10)
dato1[1] = 0x39
delay_ms(10)
dato1[0] = 0x38
delay_ms(10)

dato2[11] = 0x32
delay_ms(10)
dato2[10] = 0x37
delay_ms(10)
dato2[9] = 0x30
delay_ms(10)
dato2[8] = 0x30
delay_ms(10)
dato2[7] = 0x38
delay_ms(10)
dato2[6] = 0x39
delay_ms(10)
dato2[5] = 0x45
delay_ms(10)
dato2[4] = 0x42
delay_ms(10)
dato2[3] = 0x45
delay_ms(10)
dato2[2] = 0x45
delay_ms(10)
dato2[1] = 0x41
delay_ms(10)
dato2[0] = 0x42
delay_ms(10)

dato3[11] = 0x32
delay_ms(10)
dato3[10] = 0x37
delay_ms(10)
dato3[9] = 0x30
delay_ms(10)
dato3[8] = 0x30
delay_ms(10)
dato3[7] = 0x38
delay_ms(10)
dato3[6] = 0x38
delay_ms(10)
dato3[5] = 0x42
delay_ms(10)
dato3[4] = 0x31
delay_ms(10)
dato3[3] = 0x45
delay_ms(10)
dato3[2] = 0x37
delay_ms(10)
dato3[1] = 0x46
delay_ms(10)
dato3[0] = 0x39
delay_ms(10)
 UART1_Write_Text("AT")
 UART1_Write(0x0D)
 UART1_Write(0x0A)

  while(1)
       if dato_listo = 0xFF then
            dato_listo = 0x00
            if grabar then
                 grabar = 0x00
                 for i=0 to 11
                      dato[i] = dato_rd[i]
                      EEPROM_Write(i,dato_rd[i])
                      delay_ms(10)
                 next i
            else
                 veces1 = 0
                 for i=0 to 11
                      if (dato_rd[i] = dato1[i])then
                           inc(veces1)
                      end if
                 next i
                 if veces1 = 12 then
                      PORTB=%00000011
                      Delay_ms(500)
                      pila_mensaje()
                      UART1_Write_Text("INGRESO AUTORIZADO")
                      cola_mensaje()
                      PORTB=0X00

                 end if
                 veces2 = 0
                 for i=0 to 11
                      if (dato_rd[i] = dato2[i])then
                           inc(veces2)
                      end if
                 next i
                 if veces2 = 12 then
                      PORTB=%00001100
                      Delay_ms(500)
                      PORTB=0X00
                      pila_mensaje()
                      UART1_Write_Text("INGRESO NO AUTORIZADO")
                      cola_mensaje()
                 end if
                 veces3 = 0
                 for i=0 to 11
                      if (dato_rd[i] = dato3[i])then
                           inc(veces3)
                      end if
                 next i
                 if veces3 = 12 then
                      PORTB=%00110000
                      Delay_ms(500)
                      PORTB=0X00
                      LLAMADA()
                      LLAMADA()
                 end if
            end if
       end if
       if porte.3=0 then
            grabar = 0xFF
       end if
  wend
end.