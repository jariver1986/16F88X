
	NOLIST
; PICBASIC PRO(TM) Compiler 2.50a, (c) 1998, 2007 microEngineering Labs, Inc. All Rights Reserved.  

LABEL?L macro Label
        RST?RP
    ifdef PM_USED
        LALL
Label
        XALL
    else
Label
    endif
    endm

ADD?WCW macro Win, Cin, Wout
    if ((Wout) == (Win))
        CHK?RP  Wout
      if ((Cin) == 1)
        incf    Wout, F
        btfsc   STATUS, Z
        incf    Wout + 1, F
      else  
        movlw   low (Cin)
        addwf   Wout, F
        if (((Cin) >> 8) == 0)
        btfsc   STATUS, C
        incf    Wout + 1, F
        else
        movlw   (Cin) >> 8
        btfsc   STATUS, C
        addlw   1
        addwf   Wout + 1, F
        endif
      endif
    else
        movlw   low (Cin)
        CHK?RP  Win
        addwf   Win, W
        MOVE?AB Wout
      if (((Cin) >> 8) == 0)
        MOVE?BA Win + 1
        btfsc   STATUS, C
        addlw   1
        MOVE?AB Wout + 1
      else
        movlw   (Cin) >> 8
        btfsc   STATUS, C
        addlw   1
        CHK?RP  Win
        addwf   Win + 1, W
        MOVE?AB Wout + 1
      endif
    endif
    endm

ADD?WWW macro Win1, Win2, Wout
    if ((Wout) == (Win1))
        MOVE?BA Win2
        CHK?RP  Wout
        addwf   Wout, F
        MOVE?BA Win2 + 1
        btfsc   STATUS, C
        addlw   1
        CHK?RP  Wout
        addwf   Wout + 1, F
    else
      if ((Wout) == (Win2))
        MOVE?BA Win1
        CHK?RP  Wout
        addwf   Wout, F
        MOVE?BA Win1 + 1
        btfsc   STATUS, C
        addlw   1
        CHK?RP  Wout
        addwf   Wout + 1, F
      else
        MOVE?BA Win1
        CHK?RP  Win2
        addwf   Win2, W
        MOVE?AB Wout
        MOVE?BA Win1 + 1
        btfsc   STATUS, C
        addlw   1
        CHK?RP  Win2
        addwf   Win2 + 1, W
        MOVE?AB Wout + 1
      endif
    endif
    endm

MUL?WCW macro Win, Cin, Wout
        MOVE?WW Win, R3
        MOVE?CW Cin, R1
        L?CALL  MUL
        MOVE?AWW R2, Wout
    endm
MUL_USED = 1

SUB?WCW macro Win, Cin, Wout
    if ((Wout) == (Win))
        movlw   low (Cin)
        CHK?RP  Wout
        subwf   Wout, F
        movlw   (Cin) >> 8
        btfss   STATUS, C
        addlw   1
        subwf   (Wout) + 1, F
    else
        movlw   low (Cin)
        CHK?RP  Win
        subwf   Win, W
        MOVE?AB Wout
        movlw   (Cin) >> 8
        btfss   STATUS, C
        addlw   1
        CHK?RP  Win
        subwf   (Win) + 1, W
        MOVE?AB (Wout) + 1
    endif
    endm

LAND?BBW macro Bin1, Bin2, Wout
        MOVE?BB Bin1, FSR
        MOVE?BA Bin2
        L?CALL  LAND
        MOVE?AB Wout
        movwf   Wout + 1
    endm
LAND_USED = 1

LAND?WBL macro Win, Bin, Label
        MOVE?BB Bin, FSR
        MOVE?BA Win
        iorwf   Win + 1, W
        L?CALL  LAND
        BIT?GOTO 0, STATUS, Z, Label
    endm
LAND_USED = 1

CMPEQ?TCB macro Regin, Bitin, Cin, Bout
    if (((Cin) == 0) | ((Cin) == 1))
	clrw
	CHK?RP	Regin
      if ((Cin) == 0)
	btfss Regin, Bitin
      else
	btfsc Regin, Bitin
      endif
        movlw   -1
        MOVE?AB Bout
    else
        CHK?RP  Bout
        clrf    Bout
    endif
    endm

CMPEQ?TCL macro Regin, Bitin, Cin, Label
    if (((Cin) == 0) | ((Cin) == 1))
        CLRWDT?
        BIT?GOTO Cin, Regin, Bitin, Label
    endif
    endm

CMPGE?WCL macro Win, Cin, Label
    if ((Cin) <= 0)
        L?GOTO  Label
    else
      if ((Cin) < 10000h)
        MOVE?WW Win, R0
        MOVE?CB (Cin) >> 8, R1 + 1
        MOVE?CA low (Cin)
        L?CALL  CMPGE
        BIT?GOTO 0, STATUS, Z, Label
      endif
    endif
    endm
CMPGE_USED = 1

END? macro
    local loop
loop    sleep
        L?GOTO  loop
    endm

GOTO?L macro Label
        L?GOTO  Label
    endm

HIGH?T macro Regin, Bitin
        MOVE?CT 1, Regin, Bitin
        MOVE?CT 0, ((Regin) + 80h), Bitin
    endm

LCDOUT?C macro Cin
        movlw   Cin
        L?CALL  LCDOUT
    endm
LCDOUT_USED = 1

LCDOUTD?W macro Win
        MOVE?WWA Win, R2
        L?CALL  LCDOUTDECL
    endm
LCDOUTDECL_USED = 1

LOW?T macro Regin, Bitin
        MOVE?CT 0, Regin, Bitin
        MOVE?CT 0, ((Regin) + 80h), Bitin
    endm

PAUSE?C macro Cin
    if (((Cin) >> 8) == 0)
        MOVE?CA Cin
        L?CALL  PAUSE
    else
        MOVE?CB (Cin) >> 8, R1 + 1
        MOVE?CA low (Cin)
        L?CALL  PAUSEL
    endif
    endm
PAUSE_USED = 1

PAUSEUS?C macro Cin
    if (((Cin) >> 8) == 0)
        movlw   Cin
        L?CALL  PAUSEUS
    else
        MOVE?CB (Cin) >> 8, R0 + 1
        MOVE?CA low (Cin)
        L?CALL  PAUSEUSL
    endif
    endm
PAUSEUS_USED = 1


	LIST
