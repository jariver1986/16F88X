program calzado_inteligente
DIM contador, comando as byte
DIM DISTANCIA_DERECHA, DISTANCIA_IZQUIERDA,acumulador1,acumulador2,limite AS WORD
DIM TEXTO AS STRING [10]
sub function sensor2( ) as word
     dim turno as byte
     dim distancia,tiempo as word
     turno = 0
     PORTC.RC2 = 1
     Delay_us(150)
     PORTC.RC2 = 0
     DO
          IF( PORTC.RC3 = 1 )THEN
               TMR0 = 0
               turno = 1
          END IF
     LOOP UNTIL( turno = 1 )
     DO
          IF( PORTC.RC3 = 0 )THEN
               tiempo = TMR0
               turno = 0
          END IF
     LOOP UNTIL( turno = 0 )
     distancia = (tiempo*128)/58
     Delay_ms (50)
     result = distancia
end sub
sub function sensor1( ) as word
     dim turno as byte
     dim distancia,tiempo as word
     turno = 0
     PORTC.RC0 = 1
     Delay_us(150)
     PORTC.RC0 = 0
     DO
          IF( PORTC.RC1 = 1 )THEN
               TMR0 = 0
               turno = 1
          END IF
     LOOP UNTIL( turno = 1 )
     DO
          IF( PORTC.RC1 = 0 )THEN
               tiempo = TMR0
               turno = 0
          END IF
     LOOP UNTIL( turno = 0 )
     distancia = (tiempo*128)/58
     Delay_ms (50)
     result = distancia
end sub
sub procedure BUZZER
    PORTA.RA0 = 1
    Delay_ms(200)
    PORTA.RA0 = 0
    Delay_ms(200)
    PORTA.RA0 = 1
    Delay_ms(200)
    PORTA.RA0 = 0
    Delay_ms(200)
end sub
sub procedure VIBRADOR_DERECHA
    PORTA.RA1 = 1
    Delay_ms(200)
    PORTA.RA1 = 0
    Delay_ms(200)
    PORTA.RA1 = 1
    Delay_ms(200)
    PORTA.RA1 = 0
    Delay_ms(200)
end sub
sub procedure VIBRADOR_IZQUIERDO
    PORTA.RA2 = 1
    Delay_ms(200)
    PORTA.RA2 = 0
    Delay_ms(200)
    PORTA.RA2 = 1
    Delay_ms(200)
    PORTA.RA2 = 0
    Delay_ms(200)
end sub
main:
OPTION_REG =  6
OSCCON     =  0x65
PORTA      =  %00000110
TRISA      =  0
PORTB      =  0
TRISB      =  %00000010
PORTC      =  0
TRISC      =  %10001010
ANSEL      =0
ANSELH     = 0
UART1_Init(9600)
acumulador1 = 0
acumulador2 = 0
contador = 0
limite   = 100
comando=0
WHILE (1)
      ' CALIBACION DE COBETURA DE SENSORES
   if UART1_Data_Ready = 1 then
       comando = UART1_Read()
       Delay_ms(50)
       if comando = "1" then
          limite = 100
          UART1_Write_Text(" COBERTURA EXPANDIDA A UN METRO")
       end if
       if comando = "2" then
          limite = 200
          UART1_Write_Text(" COBERTURA EXPANDIDA A 2 METROS")
       end if
       if comando = "3" then
          limite = 300
          UART1_Write_Text(" COBERTURA EXPANDIDA A 3 METROS")
       end if
       comando=0
   end if
   ' LECTURA DE SENSORES
   DISTANCIA_DERECHA = SENSOR1
   acumulador1 = DISTANCIA_DERECHA + acumulador1
   DISTANCIA_IZQUIERDA = SENSOR2
   acumulador2 = DISTANCIA_DERECHA + acumulador2
   contador = contador + 1
   ' VERIFICACION DE COBERTURA DE SENSORES
   if contador = 10 then
      contador=0
      DISTANCIA_DERECHA   = acumulador1/10
      DISTANCIA_IZQUIERDA = acumulador2/10
      if DISTANCIA_DERECHA < limite then
          UART1_Write_Text(" ATENCIÓN OBJETO POR EL COSTADO DERECHO")
          VIBRADOR_DERECHA()
          BUZZER
      end if
      if DISTANCIA_IZQUIERDA < limite then
          UART1_Write_Text(" ATENCIÓN OBJETO POR EL COSTADO IZQUIERDO")
          VIBRADOR_IZQUIERDO()
          BUZZER
      end if
   end if
   Delay_ms(50)
WEND
end.